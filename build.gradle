plugins {
    id 'java'
    id 'maven'
    id 'pl.allegro.tech.build.axion-release' version '1.10.0'
}

repositories {
    maven { url 'http://repo.bodar.com/' }
    mavenCentral()
}

group = 'com.github.nickmcdowall'
sourceCompatibility = '11'
project.version = scmVersion.version

ext {
    junitJupiter = '5.3.2'
    junitPlatformVersion = '1.3.2'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


dependencies {
    compile "antlr:antlr:2.7.7"
    compile "org.antlr:stringtemplate:3.2.1"
    compile "com.thoughtworks.qdox:qdox:1.12.1"
    compile "com.googlecode.jarjar:jarjar:1.1"
    compile "com.googlecode.totallylazy:totallylazy:1130"
    compile "com.googlecode.funclate:funclate:110"
    compile "org.hamcrest:hamcrest-core:1.2"
    compile "org.hamcrest:hamcrest-library:1.2"
    compile "org.junit.platform:junit-platform-console-standalone:1.3.2"
    compile "net.sourceforge.plantuml:plantuml:7933"
    compile "jaxen:jaxen:1.1.1"
    compile "org.jdom:jdom:1.1"
    compile "com.googlecode.yadic:yadic:167"
    compile fileTree(dir: 'lib/manual', include: ['*.jar'])

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiter"

    testRuntime "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiter"
}


test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = "5.2.1"
}


